[{"/Users/sa/Documents/project/react_kabzda_1/src/index.js":"1","/Users/sa/Documents/project/react_kabzda_1/src/reportWebVitals.js":"2","/Users/sa/Documents/project/react_kabzda_1/src/components/settingss/settingss.jsx":"3","/Users/sa/Documents/project/react_kabzda_1/src/components/games/games.jsx":"4","/Users/sa/Documents/project/react_kabzda_1/src/redux/app-reducer.ts":"5","/Users/sa/Documents/project/react_kabzda_1/src/redux/auth-reducer.ts":"6","/Users/sa/Documents/project/react_kabzda_1/src/redux/dialogs-Reducer.ts":"7","/Users/sa/Documents/project/react_kabzda_1/src/redux/profile-Reducer.ts":"8","/Users/sa/Documents/project/react_kabzda_1/src/redux/users-Reducers.ts":"9","/Users/sa/Documents/project/react_kabzda_1/src/components/common/paginator/Paginator.tsx":"10","/Users/sa/Documents/project/react_kabzda_1/src/components/users/Users.tsx":"11","/Users/sa/Documents/project/react_kabzda_1/src/redux/redux-store.ts":"12","/Users/sa/Documents/project/react_kabzda_1/src/components/users/UsersContainer.tsx":"13","/Users/sa/Documents/project/react_kabzda_1/src/redux/usersSelectors.ts":"14","/Users/sa/Documents/project/react_kabzda_1/src/api/api.tsx":"15","/Users/sa/Documents/project/react_kabzda_1/src/components/login/login.tsx":"16","/Users/sa/Documents/project/react_kabzda_1/src/utils/validators/validarot.ts":"17","/Users/sa/Documents/project/react_kabzda_1/src/components/common/formControls/formControls.tsx":"18","/Users/sa/Documents/project/react_kabzda_1/src/api/usersAPI.tsx":"19","/Users/sa/Documents/project/react_kabzda_1/src/api/profileAPI.tsx":"20","/Users/sa/Documents/project/react_kabzda_1/src/api/authAPI.tsx":"21","/Users/sa/Documents/project/react_kabzda_1/src/api/securityAPI.tsx":"22","/Users/sa/Documents/project/react_kabzda_1/src/utils/object-helpers.ts":"23","/Users/sa/Documents/project/react_kabzda_1/src/components/dialogs/dialogsContainer.tsx":"24","/Users/sa/Documents/project/react_kabzda_1/src/components/dialogs/dialogs.tsx":"25","/Users/sa/Documents/project/react_kabzda_1/src/App.tsx":"26","/Users/sa/Documents/project/react_kabzda_1/src/components/users/User.tsx":"27","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/profileContainer.tsx":"28","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/profile.tsx":"29","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/profileInfo/profileInfo.tsx":"30","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/profileInfo/ProfileDataForm.tsx":"31","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/myPosts/MyPosts.tsx":"32","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/myPosts/MyPostsContainer.tsx":"33","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/myPosts/post/post.tsx":"34","/Users/sa/Documents/project/react_kabzda_1/src/hoc/withAuthRedirect.jsx":"35","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/profileInfo/ProfileStatusHooks.tsx":"36","/Users/sa/Documents/project/react_kabzda_1/src/components/navbar/Navbar.tsx":"37","/Users/sa/Documents/project/react_kabzda_1/src/components/common/preloader/preloader.tsx":"38","/Users/sa/Documents/project/react_kabzda_1/src/components/music/music.tsx":"39","/Users/sa/Documents/project/react_kabzda_1/src/components/news/news.tsx":"40","/Users/sa/Documents/project/react_kabzda_1/src/components/header/headerComponent.tsx":"41","/Users/sa/Documents/project/react_kabzda_1/src/components/header/header.tsx":"42","/Users/sa/Documents/project/react_kabzda_1/src/components/dialogs/dialogItem/dialogItems.tsx":"43","/Users/sa/Documents/project/react_kabzda_1/src/components/dialogs/dialogMessage/dialogsMessages.tsx":"44"},{"size":651,"mtime":1615381884504,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1612440769733,"results":"47","hashOfConfig":"46"},{"size":176,"mtime":1611754150081,"results":"48","hashOfConfig":"46"},{"size":203,"mtime":1613566039659,"results":"49","hashOfConfig":"46"},{"size":963,"mtime":1616251074289,"results":"50","hashOfConfig":"46"},{"size":2697,"mtime":1616251181356,"results":"51","hashOfConfig":"46"},{"size":1412,"mtime":1616499728535,"results":"52","hashOfConfig":"46"},{"size":3692,"mtime":1616251002506,"results":"53","hashOfConfig":"46"},{"size":3841,"mtime":1616534693096,"results":"54","hashOfConfig":"46"},{"size":1816,"mtime":1615998381167,"results":"55","hashOfConfig":"46"},{"size":1056,"mtime":1616004659445,"results":"56","hashOfConfig":"46"},{"size":1363,"mtime":1616270993728,"results":"57","hashOfConfig":"46"},{"size":3259,"mtime":1616536362481,"results":"58","hashOfConfig":"46"},{"size":851,"mtime":1616251129041,"results":"59","hashOfConfig":"46"},{"size":1228,"mtime":1616240489742,"results":"60","hashOfConfig":"46"},{"size":2553,"mtime":1616501807422,"results":"61","hashOfConfig":"46"},{"size":557,"mtime":1616080012790,"results":"62","hashOfConfig":"46"},{"size":2220,"mtime":1616097678222,"results":"63","hashOfConfig":"46"},{"size":534,"mtime":1616241139043,"results":"64","hashOfConfig":"46"},{"size":1050,"mtime":1616250332050,"results":"65","hashOfConfig":"46"},{"size":797,"mtime":1616193792454,"results":"66","hashOfConfig":"46"},{"size":256,"mtime":1616240786019,"results":"67","hashOfConfig":"46"},{"size":259,"mtime":1616251414924,"results":"68","hashOfConfig":"46"},{"size":793,"mtime":1616533269659,"results":"69","hashOfConfig":"46"},{"size":2184,"mtime":1616511084902,"results":"70","hashOfConfig":"46"},{"size":2756,"mtime":1616510645919,"results":"71","hashOfConfig":"46"},{"size":1599,"mtime":1616516475106,"results":"72","hashOfConfig":"46"},{"size":2336,"mtime":1616536657995,"results":"73","hashOfConfig":"46"},{"size":790,"mtime":1616533130710,"results":"74","hashOfConfig":"46"},{"size":3422,"mtime":1616533128063,"results":"75","hashOfConfig":"46"},{"size":1971,"mtime":1616528234447,"results":"76","hashOfConfig":"46"},{"size":1988,"mtime":1616531071148,"results":"77","hashOfConfig":"46"},{"size":604,"mtime":1616532437646,"results":"78","hashOfConfig":"46"},{"size":472,"mtime":1616532563036,"results":"79","hashOfConfig":"46"},{"size":1432,"mtime":1616533534178,"results":"80","hashOfConfig":"46"},{"size":1192,"mtime":1616533915398,"results":"81","hashOfConfig":"46"},{"size":937,"mtime":1616536641309,"results":"82","hashOfConfig":"46"},{"size":180,"mtime":1616537899964,"results":"83","hashOfConfig":"46"},{"size":159,"mtime":1616538007605,"results":"84","hashOfConfig":"46"},{"size":165,"mtime":1616538030123,"results":"85","hashOfConfig":"46"},{"size":651,"mtime":1616537606222,"results":"86","hashOfConfig":"46"},{"size":720,"mtime":1616537232703,"results":"87","hashOfConfig":"46"},{"size":389,"mtime":1616537826585,"results":"88","hashOfConfig":"46"},{"size":240,"mtime":1616537746079,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"mzpxw8",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"101"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"101"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"101"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"101"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"101"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"101"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"101"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sa/Documents/project/react_kabzda_1/src/index.js",[],["194","195"],"/Users/sa/Documents/project/react_kabzda_1/src/reportWebVitals.js",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/settingss/settingss.jsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/games/games.jsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/redux/app-reducer.ts",[],["196","197"],"/Users/sa/Documents/project/react_kabzda_1/src/redux/auth-reducer.ts",["198"],"import { Action } from \"redux\";\nimport { FormAction, stopSubmit } from \"redux-form\";\nimport { ResultCodesEnum, ResultCodeForCaptchaEnum } from \"../api/api\";\nimport { authAPI } from \"../api/authAPI\";\nimport { securityAPI } from \"../api/securityAPI\";\nimport { BaseThunkType, InferActionsType } from \"./redux-store\";\n\nexport type InitialStateType = typeof initialState;\ntype AuthReducerActionType = InferActionsType<typeof actions>;\ntype ThunkType = BaseThunkType<AuthReducerActionType | FormAction>;\n\nlet initialState = {\n  id: null as number | null,\n  email: null as string | null,\n  login: null as string | null,\n  isAuth: false,\n  captchaUrl: null as string | null, // if null - not required\n};\n\nconst authReducer = (\n  state = initialState,\n  action: AuthReducerActionType\n): InitialStateType => {\n  switch (action.type) {\n    case \"SN/AUTH/SET-USER-DATA\":\n    case \"SN/AUTH/GET-KAPTCHA-URL\":\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const actions = {\n  setUserData: (\n    id: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean\n  ) =>\n    ({\n      type: \"SN/AUTH/SET-USER-DATA\",\n      payload: { id, email, login, isAuth },\n    } as const),\n  setCaptchaUrl: (captchaUrl: string) =>\n    ({ type: \"SN/AUTH/GET-KAPTCHA-URL\", payload: { captchaUrl } } as const),\n};\n\n// thunkcreator\n\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\n  let meData = await authAPI.me();\n  if (meData.resultCode === ResultCodesEnum.Success) {\n    let { id, email, login } = meData.data;\n    dispatch(actions.setUserData(id, email, login, true));\n  }\n};\n\nexport const login = (\n  email: string,\n  password: string,\n  rememberMe: boolean,\n  captcha: string\n): ThunkType => async (dispatch) => {\n  let loginData = await authAPI.login(email, password, rememberMe, captcha);\n  if (loginData.resultCode === ResultCodesEnum.Success) {\n    dispatch(getAuthUserData());\n  } else {\n    if (loginData.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\n      dispatch(getCaptchaUrl());\n    }\n    let message =\n      loginData.messages.length > 0 ? loginData.messages[0] : \"Some Error\";\n    dispatch(stopSubmit(\"login\", { _error: message }));\n  }\n};\n\nexport const logout = (): ThunkType => async (dispatch) => {\n  let response = await authAPI.logout();\n  if (response.data.resultCode === 0) {\n    dispatch(actions.setUserData(null, null, null, false));\n  }\n};\n\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\n  let data = await securityAPI.getCaptchaUrl();\n  const captchaUrl = data.url;\n\n  dispatch(actions.setCaptchaUrl(captchaUrl));\n};\n\nexport default authReducer;\n","/Users/sa/Documents/project/react_kabzda_1/src/redux/dialogs-Reducer.ts",[],"/Users/sa/Documents/project/react_kabzda_1/src/redux/profile-Reducer.ts",["199","200"],"import { Dispatch } from \"redux\";\nimport { FormAction, stopSubmit } from \"redux-form\";\nimport { profileAPI } from \"../api/profileAPI\";\nimport { PhotosType, PostDataType, ProfileType } from './../types/types';\nimport { BaseThunkType, InferActionsType } from \"./redux-store\";\n\n\ntype InitialStateType = typeof initialState;\ntype ActionType = InferActionsType <typeof actions>\ntype ThunkType = BaseThunkType<ActionType | FormAction >\n\n\nlet initialState = {\n  postData: [\n    { id: 1, message: \"Hi, how are you?\", like: 23 },\n    { id: 2, message: \"this is my first try to make a post there\", like: 2 },\n    { id: 3, message: \"Are any pretty puppy-girls there?\", like: 3345 },\n    { id: 4, message: \"My name is Louygy or you can also call me Vinsy\", like: 1 }] as Array<PostDataType>,\n  profile: null as ProfileType | null,\n  status: \"\",\n  newPostText: \"\",\n};\n\n\n\nconst profileReducer = (state = initialState, action: ActionType): InitialStateType => {\n  switch (action.type) {\n    case \"SN/PROFILE/ADD-POST\": {\n      let newPost = {\n        id: 5,\n        message: action.newPostText,\n        like: 0,\n      };\n      return {\n        ...state,\n        postData: [...state.postData, newPost],\n        newPostText: \"\",\n      };\n    }\n    case \"SN/PROFILE/SET-USERS-PROFILE\": {\n      return {\n        ...state,\n        profile: action.profile,\n      };\n    }\n    case \"SN/PROFILE/SET-USERS-STATUS\": {\n      return {\n        ...state,\n        status: action.status,\n      };\n    }\n    case \"SN/PROFILE/DELETE-POST\": {\n      return {\n        ...state,\n        postData: state.postData.filter((p) => p.id != action.postId),\n      };\n    }\n    case \"SN/PROFILE/UPDATE-PHOTO\": {\n      return {\n        ...state,\n        profile: { ...state.profile, photos: action.photos } as ProfileType,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\n\n\nexport const actions = {\n    addPostActionCreator: (newPostText: string) => ({type: \"SN/PROFILE/ADD-POST\", newPostText} as const),\n    setUsersProfile: (profile: ProfileType) => ({type: \"SN/PROFILE/SET-USERS-PROFILE\", profile} as const),\n    setUserStatusAC: (status: string) => ({type: \"SN/PROFILE/SET-USERS-STATUS\", status} as const),\n    deletePost: (postId: number) => ({type: \"SN/PROFILE/DELETE-POST\", postId} as const),\n    savePhotoSuccess: (photos: PhotosType) => ({type: \"SN/PROFILE/UPDATE-PHOTO\", photos} as const)\n}\n\n\n\n\n// thunks\n\nexport const getUserProfile = (userId: number ): ThunkType => async (dispatch) => {\n  let data = await profileAPI.getProfile(userId);\n  dispatch(actions.setUsersProfile(data));\n};\n\nexport const getUserStatus = (userId: number ): ThunkType => async (dispatch) => {\n  let data = await profileAPI.getStatus(userId);\n  dispatch(actions.setUserStatusAC(data));\n};\n\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\n  let data = await profileAPI.updateStatus(status);\n  if (data.resultCode === 0) {\n    dispatch(actions.setUserStatusAC(status));\n  }\n};\n\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\n  let data = await profileAPI.savePhoto(file);\n  if (data.resultCode === 0) {\n    dispatch(actions.savePhotoSuccess(data.data.photos));\n  }\n};\n\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\n  const userId = getState().auth.id;\n  let data = await profileAPI.saveProfile(profile);\n  if (data.resultCode === 0) {\n    if (userId != null) {\n      dispatch(getUserProfile(userId))\n    } else {\n      throw new Error(\"UserId can't be null\")\n    }\n    ;\n  } else {\n    dispatch(stopSubmit(\"editProfile\", { _error: data.messages[0] }));\n    return Promise.reject(data.messages[0]);\n  }\n};\n\n\nexport default profileReducer;\n","/Users/sa/Documents/project/react_kabzda_1/src/redux/users-Reducers.ts",["201","202"],"import { AppStateType, BaseThunkType, InferActionsType } from \"./redux-store\";\nimport { usersAPI } from \"./../api/usersAPI\";\nimport { updateObjectInArray } from \"../utils/object-helpers\";\nimport { UsersType } from \"./../types/types\";\nimport { Dispatch } from \"redux\";\n\ntype InitialStateType = typeof initialState;\ntype ActionsTypes = InferActionsType<typeof actions>;\ntype DispatchType = Dispatch<ActionsTypes>;\ntype ThunkType = BaseThunkType<ActionsTypes>\n\n\nlet initialState = {\n  users: [] as Array<UsersType>,\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [] as Array<number>, // array of users Id\n};\n\nconst usersReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case \"FOLLOW\":\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: true,\n        }),\n      };\n\n    case \"UNFOLLOW\":\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: false,\n        }),\n      };\n\n    case \"SET_USERS\":\n      return { ...state, users: action.users };\n\n    case \"SET_CURRENT_PAGE\":\n      return { ...state, currentPage: action.currentPage };\n\n    case \"TOTAL_USERS_COUNT\":\n      return { ...state, totalUsersCount: action.totalUsersCount };\n\n    case \"TOGGLE_IS_FETCHING\":\n      return { ...state, isFetching: action.isFetching };\n\n    case \"TOGGLE_IN_FOLLOWING_PROGRESS\":\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter((id) => id != action.userId),\n      };\n\n    default:\n      return state;\n  }\n};\n\n\n\nexport const actions = {\n  followSuccess: (userId: number) => ({ type: \"FOLLOW\", userId } as const),\n  unfollowSuccess: (userId: number) => ({ type: \"UNFOLLOW\", userId } as const),\n  setUsers: (users: Array<UsersType>) =>\n    ({ type: \"SET_USERS\", users } as const),\n  setCurrentPages: (currentPage: number) =>\n    ({ type: \"SET_CURRENT_PAGE\", currentPage } as const),\n  setTotalUsersCount: (totalUsersCount: number) =>\n    ({ type: \"TOTAL_USERS_COUNT\", totalUsersCount } as const),\n  toggleIsFetchingt: (isFetching: boolean) =>\n    ({ type: \"TOGGLE_IS_FETCHING\", isFetching } as const),\n  toggleInFollowingProgress: (isFetching: boolean, userId: number) =>\n    ({ type: \"TOGGLE_IN_FOLLOWING_PROGRESS\", isFetching, userId } as const),\n};\n\n\n\nexport const getUsers = (page: number, pageSize: number): ThunkType => {\n  return async (dispatch, getState) => {\n    dispatch(actions.toggleIsFetchingt(true));\n    dispatch(actions.setCurrentPages(page));\n    let data = await usersAPI.getUsers(page, pageSize);\n    dispatch(actions.toggleIsFetchingt(false));\n    dispatch(actions.setUsers(data.items));\n    dispatch(actions.setTotalUsersCount(data.totalCount));\n  };\n};\n\nconst _followUnfollowFlow = async (\n  dispatch: DispatchType,\n  userId: number,\n  apiMethod: any,\n  actionCreator: (userId: number) => ActionsTypes\n) => {\n  dispatch(actions.toggleInFollowingProgress(true, userId));\n\n  let response = await apiMethod(userId);\n  if (response.data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(actions.toggleInFollowingProgress(false, userId));\n};\n\nexport const follow = (userId: number): ThunkType => {\n  return async (dispatch) => {\n   await _followUnfollowFlow(\n      dispatch,\n      userId,\n      usersAPI.follow.bind(usersAPI),\n      actions.followSuccess\n    );\n  };\n};\n\nexport const unfollow = (userId: number): ThunkType => {\n  return async (dispatch) => {\n    await _followUnfollowFlow(\n      dispatch,\n      userId,\n      usersAPI.unfollow.bind(usersAPI),\n      actions.unfollowSuccess\n    );\n  };\n};\n\nexport default usersReducer;\n","/Users/sa/Documents/project/react_kabzda_1/src/components/common/paginator/Paginator.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/users/Users.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/redux/redux-store.ts",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/users/UsersContainer.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/redux/usersSelectors.ts",[],"/Users/sa/Documents/project/react_kabzda_1/src/api/api.tsx",["203"],"import axios from \"axios\";\nimport { ProfileType, UsersType } from \"../types/types\";\n\nexport const instance = axios.create({\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  withCredentials: true,\n  headers: { \"API-KEY\": \"5e1e94dd-2abe-4dce-a3f7-967696a4a8f7\" },\n});\n\nexport enum ResultCodesEnum {\n  Success = 0,\n  Error = 1,\n}\n\nexport enum ResultCodeForCaptchaEnum {\n  CaptchaIsRequired = 10\n}\n\nexport type GetItemsType = {\n  items: Array<UsersType>\n  totalCount: number\n  error: string | null\n} \n\nexport type ResponseType<D = {}, RC = ResultCodesEnum> = {\n  data: D;\n  messages: Array<string>;\n  resultCode: RC;\n};\n\n\n\n\n\n\n\n// export const followAPI = () => {\n//   return axios\n//     `, {\n//       withCredentials: true,\n//       headers: { \"API-KEY\": \"5e1e94dd-2abe-4dce-a3f7-967696a4a8f7\" },\n//     })\n//     .then((response) => {\n//       return response.data;\n//     });\n// };\n\n// export const unfollowAPI = () => {\n//   axios\n//     .post(\n//       `${baseURL} + follow/${u.id}`,\n//       {},\n//       {\n//         withCredentials: true,\n//         headers: { \"API-KEY\": \"5e1e94dd-2abe-4dce-a3f7-967696a4a8f7\" },\n//       }\n//     )\n//     .then((response) => {\n//       return response.data;\n//     });\n// };\n","/Users/sa/Documents/project/react_kabzda_1/src/components/login/login.tsx",["204","205"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\nimport { required } from \"../../utils/validators/validarot\";\nimport { createField, Input } from \"../common/formControls/formControls\";\nimport { login } from \"../../redux/auth-reducer\";\nimport s from \"./../../components/common/formControls/FormsControl.module.css\";\nimport { AppStateType } from \"../../redux/redux-store\";\n\n\ntype LoginFormOwnPropsType = {\n  captchaUrl: string | null\n}\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnPropsType> & LoginFormOwnPropsType> = ({ handleSubmit, error, captchaUrl }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      {createField<LoginFormValuesTypeKeys>(\"Email\", \"email\", [required], Input)}\n      {createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", [required], Input, { type: \"password\"})}\n      {createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\n\n      {captchaUrl && <img src={captchaUrl} />}\n      {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\n\n      {error && <div className={s.formSummaryError}>{error}</div>}\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  );\n};\n\nconst ReduxLoginForm = reduxForm<LoginFormValuesType, LoginFormOwnPropsType>({\n  form: \"login\",\n})(LoginForm);\n\ntype MapStatePropsLoginType = {\n  isAuth: boolean\n  captchaUrl: string | null\n\n}\n\ntype MapDispatchLoginPropsType = {\n  login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\n}\n\ntype LoginFormValuesType = {\n  email: string,\n   password: string, \n   rememberMe: boolean, \n   captcha: string\n}\n\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>\n\n\n\nconst Login: React.FC<MapStatePropsLoginType & MapDispatchLoginPropsType> = (props) => {\n  const onSubmit = (formData: LoginFormValuesType) => {\n    props.login(\n      formData.email,\n      formData.password,\n      formData.rememberMe,\n      formData.captcha\n    );\n  };\n\n  if (props.isAuth) {\n    return <Redirect to={\"/profile\"} />;\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <ReduxLoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsLoginType => ({\n  isAuth: state.auth.isAuth,\n  captchaUrl: state.auth.captchaUrl,\n});\nexport default connect(mapStateToProps, { login })(Login);\n","/Users/sa/Documents/project/react_kabzda_1/src/utils/validators/validarot.ts",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/common/formControls/formControls.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/api/usersAPI.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/api/profileAPI.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/api/authAPI.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/api/securityAPI.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/utils/object-helpers.ts",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/dialogs/dialogsContainer.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/dialogs/dialogs.tsx",["206","207"],"import React from \"react\";\nimport DialogItem from \"./dialogItem/dialogItems\";\nimport Message from \"./dialogMessage/dialogsMessages\";\nimport s from \"./dialogs.module.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { createField, TextArea } from \"../common/formControls/formControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validarot\";\nimport { InitialStateType } from \"../../redux/dialogs-Reducer\";\nimport { Redirect } from \"react-router\";\nimport { InjectedFormProps } from \"redux-form\";\n\nconst maxLengthCreator100 = maxLengthCreator(100)\n\ntype DialogsPropsType = {\n  dialogPage: InitialStateType\n  sendMessage: (messageText: string) => void\n \n}\n\ntype NewMessageFormValuesType = {\n  email: string,\n   password: string, \n   rememberMe: boolean, \n   newMessageBody: string\n}\n\ntype NewMessageFormValuesTypeKeys = Extract<keyof NewMessageFormValuesType, string>\ntype PropsType = {}\n\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\n  let state = props.dialogPage;\n\n  let messageElements = state.messageText.map((t) => (\n    <Message text={t.message} />\n  ));\n\n  let dialogsElements = state.dialogsData.map((d) => (\n    <DialogItem name={d.name} id={d.id} />\n  ));\n\n\n  let addNewMessage = (values: NewMessageFormValuesType) => {\n    props.sendMessage(values.newMessageBody)    \n  };\n\n\n  return (\n    <div>\n      <div className={s.dialogs}>\n        <div className={s.dialogsItems}>{dialogsElements}</div>\n        <div className={s.messages}>\n          <div>{messageElements}</div>\n          <div>\n            <ReduxAddMessageForm onSubmit={addNewMessage}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormValuesType, PropsType> & PropsType> = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n            {createField<NewMessageFormValuesTypeKeys>(\"enter your message\", \"newMessageBody\", [required, maxLengthCreator100], TextArea)}\n\n  \n      <div>\n        <button>Send...</button>\n      </div>\n    </form>\n  );\n};\n\nconst ReduxAddMessageForm = reduxForm<NewMessageFormValuesType>({\n  form: \"addMessage\",\n})(AddMessageForm);\n\nexport default Dialogs;\n","/Users/sa/Documents/project/react_kabzda_1/src/App.tsx",["208","209"],"import React, { Component, ComponentType, Profiler } from 'react'\nimport { HashRouter, Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport './App.css';\nimport DialogsContainer from './components/dialogs/dialogsContainer';\nimport Music from './components/music/music';\nimport Navbar from './components/navbar/Navbar';\nimport News from './components/news/news';\nimport ProfileContainer from './components/profile/profileContainer';\nimport Settingss from './components/settingss/settingss';\nimport UsersContainer from './components/users/UsersContainer';\nimport Games from './components/games/games'\nimport HeaderComponent from './components/header/headerComponent';\nimport LoginPage from './components/login/login'\nimport { connect } from 'react-redux';\nimport { initializeApp } from \"./redux/app-reducer\";\nimport Preloader from './components/common/preloader/preloader';\nimport { compose } from 'redux';\nimport store, { AppStateType } from './redux/redux-store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n  initializeApp: () => void \n}\n\nclass App extends Component<MapPropsType & DispatchPropsType> {\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className='app-wrapper'>\n        <HeaderComponent />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Switch>\n            <Route exact path='/' render={() => <Redirect to={'/profile'} />} />\n            <Route path='/dialogs' render={() => <DialogsContainer />} />\n            <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n            <Route path='/news' render={() => <News />} />\n            <Route path='/music' render={() => <Music />} />\n            <Route path='/settingss' render={() => <Settingss />} />\n            <Route path='/users' render={() => <UsersContainer pageTitle={\"Our Social network users:\"}/>} />\n            <Route path='/games' render={() => <Games />} />\n            <Route path='/login' render={() => <LoginPage />} />\n            <Route path='*' render={() => <div><b>404 PAGE NOT FOUND</b></div>} />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose<ComponentType>(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }))(App);\n\nlet MainApp: React.FC = () => {\n  return <HashRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </HashRouter>\n}\n\nexport default MainApp","/Users/sa/Documents/project/react_kabzda_1/src/components/users/User.tsx",["210"],"import React from \"react\";\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../components/assets/images/user.png\";\nimport { NavLink } from \"react-router-dom\";\nimport { UsersType } from \"../../types/types\";\n\ntype UserType = {\n  user: UsersType\n  followingInProgress: Array<number>\n  follow: (userId: number) => void;\n  unfollow: (userId: number) => void;\n}\n\n\nlet User: React.FC<UserType> = ({ user, followingInProgress, unfollow, follow }) => {\n  return (\n    <div>\n      <span>\n        <div>\n          <NavLink to={\"/profile/\" + user.id}>\n            <img\n              src={user.photos.small != null ? user.photos.small : userPhoto}\n              className={styles.userPhoto}\n            />\n          </NavLink>\n        </div>\n        <div>\n          {user.followed ? (\n            <button\n              disabled={followingInProgress.some((id) => id === user.id)}\n              onClick={() => {\n                unfollow(user.id);\n              }}\n            >\n              Unfollow\n            </button>\n          ) : (\n            <button\n              disabled={followingInProgress.some((id) => id === user.id)}\n              onClick={() => {\n                follow(user.id);\n              }}\n            >\n              Follow\n            </button>\n          )}\n        </div>\n      </span>\n      <span>\n        <span>\n          <div>{user.name}</div>\n          <div>{user.status}</div>\n        </span>\n        <span>\n          <div>{\"u.location.city\"}</div>\n          <div>{\"u.location.countrie\"}</div>\n        </span>\n      </span>\n    </div>\n  );\n};\n\nexport default User;\n","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/profileContainer.tsx",["211"],"import React from \"react\";\nimport Profile from \"./profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserProfile,\n  getUserStatus,\n  updateStatus,\n  savePhoto,\n  saveProfile,\n} from \"../../redux/profile-Reducer\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { AppStateType } from \"../../redux/redux-store\";\nimport { ProfileType } from \"../../types/types\";\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>;\n\ntype MapDispatchProfileContainerType = {\n  getUserProfile: (userId: number) => void;\n  getUserStatus: (userId: number) => void;\n  updateStatus: (status: string) => void;\n  savePhoto: (file: File) => void;\n  saveProfile: (profile: ProfileType) => Promise<any>;\n};\n\ntype PathParamsType = {\n  userId: string;\n};\n\ntype PropsType = MapPropsType &\n  MapDispatchProfileContainerType &\n  RouteComponentProps<PathParamsType>;\n\nclass ProfileContainer extends React.Component<PropsType> {\n  refreshProfile() {\n    let userId: number | null = +this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorisedId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    if (!userId) {\n      console.error(\"ID should be exist\");\n    } else {\n      this.props.getUserProfile(userId);\n      this.props.getUserStatus(userId);\n    }\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n  \n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={!this.props.match.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n        savePhoto={this.props.savePhoto}\n        // saveProfile={this.props.saveProfile}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state: AppStateType) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorisedId: state.auth.id,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose<React.ComponentType>(\n  connect(mapStateToProps, {\n    getUserProfile,\n    getUserStatus,\n    updateStatus,\n    savePhoto,\n    saveProfile,\n  }),\n  withRouter\n)(ProfileContainer);\n","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/profile.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/profile/profileInfo/profileInfo.tsx",["212"],"import React, { ChangeEvent, useState } from \"react\";\nimport Preloader from \"../../common/preloader/preloader\";\nimport s from \"./ProfileInfo.module.css\";\nimport ava from \"./../../assets/images/ava_new.jpg\";\nimport ProfileStatusWithHooks from \"./ProfileStatusHooks\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport { ContactsType, ProfileType } from \"../../../types/types\";\n\n\ntype PropsType = {\n  profile: ProfileType | null\n  status: string\n  updateStatus: (status: string) => void\n  isOwner: boolean\n  savePhoto: (file: File) => void\n  saveProfile: (profile: ProfileType) => Promise<any>\n}\n\nconst ProfileInfo: React.FC<PropsType> = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile,\n}) => {\n  const [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const oNMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData: ProfileType) => {\n    saveProfile(formData).then(\n      () => {\n        setEditMode(false)\n      }\n    );\n  };\n\n  return (\n    <div>\n      <div className={s.descriptionBlock}>\n        <img className={s.photo} src={profile.photos.large || ava} />\n        {isOwner && (\n          <div>\n            <input type={\"file\"} onChange={oNMainPhotoSelected} />\n          </div>\n        )}\n        <br></br>\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n        <br></br>\n        <div>\n          {editMode ? (\n            <ProfileDataForm\n              initialValues={profile}\n              profile={profile}\n              onSubmit={onSubmit}\n            />\n          ) : (\n            <ProfileData\n              toEditMode={() => {\n                setEditMode(true);\n              }}\n              profile={profile}\n              isOwner={isOwner}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\ntype ContactsPropsType = {\n  contactTitle: string\n  contactValue: string \n}\n\nconst Contact: React.FC<ContactsPropsType> = ({ contactTitle, contactValue }) => {\n    return (\n      <div>\n        <b>{contactTitle}</b>\n        <span> {contactValue} </span>\n      </div>\n    );\n};\n\ntype ProfileDataPropsType = {\n  profile: ProfileType\n  isOwner: boolean\n  toEditMode: () => void\n}\n\nconst ProfileData: React.FC<ProfileDataPropsType> = ({ profile, isOwner, toEditMode }) => {\n  return (\n    <div>\n      {isOwner && (\n        <div>\n          <button onClick={toEditMode}>Edit profile page</button>\n        </div>\n      )}\n      <h2>{profile.fullName}</h2>\n      <h3>page ID: {profile.userId}</h3>\n      <div>\n        <b>{profile.aboutMe || \"About me: \"}</b>\n      </div>\n      {/* <div>Looking for a job?\n        <span><b>{profile.lookingForAJob ? \"yes\" : \"no\"}</b></span>\n        <b>{profile.lookingForAJobDescription}</b>\n      </div>\n      <div>Professional skills:\n        <span><b>{profile.lookingForAJobDescription}</b></span>\n      </div> */}\n      <div>\n        <b>Contacts:</b>\n        <div className={s.descriptionBlock}>{Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key as keyof ContactsType]}\n            />\n          );\n        })}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/profileInfo/ProfileDataForm.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/profile/myPosts/MyPosts.tsx",["213","214"],"import React, { PureComponent } from \"react\";\nimport { reduxForm, Field, InjectedFormProps } from \"redux-form\";\nimport { PostDataType } from \"../../../types/types\";\nimport {\n  maxLengthCreator,\n  minLengthCreator,\n  required,\n} from \"../../../utils/validators/validarot\";\nimport { createField, TextArea } from \"../../common/formControls/formControls\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./post/post\";\n\nconst maxLengthCreator10 = maxLengthCreator(10); //for initialization\nconst minLengthCreator2 = minLengthCreator(2);\n\ntype PropsType = {}\n\ntype AddPostFormValuesType = {\n  newPostText: string\n}\ntype AddPostFormValuesTypeKeys = Extract<keyof AddPostFormValuesType, string>\n\nconst AddNewPostForm: React.FC<InjectedFormProps<AddPostFormValuesType, PropsType> & PropsType> = (props) => {   //the real form\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n      {createField <AddPostFormValuesTypeKeys>(\"type your message here...\", \"newPostText\", [required, maxLengthCreator10, minLengthCreator2], TextArea)}\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddNewPostFormRedux = reduxForm<AddPostFormValuesType, PropsType>({ form: \"profileAddNewPostForm\" })(\n  AddNewPostForm    //redux packing\n);\n\nexport type MapMyPostsType = {\n  postData: Array<PostDataType>\n}\n\nexport type DispatchMyPostsType = {\n  addPost: (newPostText: string) => void\n}\n\nconst MyPostsForMemo: React.FC<MapMyPostsType & DispatchMyPostsType> = (props) => {      \n  let postsElements = props.postData.map(p => (\n    <Post message={p.message} likeCount={p.like} />\n  ));\n\n  let onAddPost = (values: AddPostFormValuesType) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={s.postBlock}>\n      <h3>my post</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n};\n\n\nconst MyPosts = React.memo(MyPostsForMemo)\n\nexport default MyPosts;\n\n","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/myPosts/MyPostsContainer.tsx",["215"],"import React from \"react\";\nimport { actions } from \"../../../redux/profile-Reducer\";\nimport MyPosts, { MapMyPostsType, DispatchMyPostsType } from \"./MyPosts\";\nimport { connect } from \"react-redux\";\nimport { AppStateType } from \"../../../redux/redux-store\";\n\nlet mapStateProps = (state: AppStateType) => {\n  return {\n    postData: state.profilePage.postData,\n    newPostText: state.profilePage.newPostText\n  }\n};\n\n\nconst MyPostsContainer = connect<MapMyPostsType, DispatchMyPostsType, {}, AppStateType>(mapStateProps, { addPost: actions.addPostActionCreator })(MyPosts);\n\nexport default MyPostsContainer;\n","/Users/sa/Documents/project/react_kabzda_1/src/components/profile/myPosts/post/post.tsx",["216"],"import React from \"react\";\nimport s from \"./post.module.css\";\n\n\ntype PropsType = {\n  message: string\n  likeCount: number \n}\n\nconst Post: React.FC<PropsType> = (props) => {\n  return (\n    <div className={s.item}>\n      <img src=\"https://s.playgrnd.media/media/b404989fd35a210ff3ae0bcb0dd98c47b.jpg?w=500&h=500&v=30&dpr=2&fm=webp\" />\n      {props.message}\n      <div>\n        <span>like</span>\n        {props.likeCount}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n",["217","218"],"/Users/sa/Documents/project/react_kabzda_1/src/hoc/withAuthRedirect.jsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/profile/profileInfo/ProfileStatusHooks.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/navbar/Navbar.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/common/preloader/preloader.tsx",["219"],"/Users/sa/Documents/project/react_kabzda_1/src/components/music/music.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/news/news.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/header/headerComponent.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/header/header.tsx",["220"],"/Users/sa/Documents/project/react_kabzda_1/src/components/dialogs/dialogItem/dialogItems.tsx",[],"/Users/sa/Documents/project/react_kabzda_1/src/components/dialogs/dialogMessage/dialogsMessages.tsx",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":1,"column":10,"nodeType":"227","messageId":"228","endLine":1,"endColumn":16},{"ruleId":"225","severity":1,"message":"229","line":1,"column":10,"nodeType":"227","messageId":"228","endLine":1,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":55,"column":53,"nodeType":"232","messageId":"233","endLine":55,"endColumn":55},{"ruleId":"225","severity":1,"message":"234","line":1,"column":10,"nodeType":"227","messageId":"228","endLine":1,"endColumn":22},{"ruleId":"230","severity":1,"message":"231","line":60,"column":57,"nodeType":"232","messageId":"233","endLine":60,"endColumn":59},{"ruleId":"225","severity":1,"message":"235","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":21},{"ruleId":"225","severity":1,"message":"236","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":23,"column":22,"nodeType":"239","endLine":23,"endColumn":46},{"ruleId":"225","severity":1,"message":"236","line":5,"column":10,"nodeType":"227","messageId":"228","endLine":5,"endColumn":15},{"ruleId":"225","severity":1,"message":"240","line":9,"column":10,"nodeType":"227","messageId":"228","endLine":9,"endColumn":18},{"ruleId":"225","severity":1,"message":"241","line":1,"column":43,"nodeType":"227","messageId":"228","endLine":1,"endColumn":51},{"ruleId":"225","severity":1,"message":"242","line":20,"column":10,"nodeType":"227","messageId":"228","endLine":20,"endColumn":23},{"ruleId":"237","severity":1,"message":"238","line":21,"column":13,"nodeType":"239","endLine":24,"endColumn":15},{"ruleId":"230","severity":1,"message":"231","line":56,"column":40,"nodeType":"232","messageId":"233","endLine":56,"endColumn":42},{"ruleId":"237","severity":1,"message":"238","line":50,"column":9,"nodeType":"239","endLine":50,"endColumn":70},{"ruleId":"225","severity":1,"message":"243","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":30},{"ruleId":"225","severity":1,"message":"236","line":2,"column":21,"nodeType":"227","messageId":"228","endLine":2,"endColumn":26},{"ruleId":"225","severity":1,"message":"244","line":1,"column":8,"nodeType":"227","messageId":"228","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"238","line":13,"column":7,"nodeType":"239","endLine":13,"endColumn":120},{"ruleId":"221","replacedBy":"245"},{"ruleId":"223","replacedBy":"246"},{"ruleId":"237","severity":1,"message":"238","line":6,"column":11,"nodeType":"239","endLine":6,"endColumn":33},{"ruleId":"237","severity":1,"message":"238","line":17,"column":7,"nodeType":"239","endLine":17,"endColumn":95},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"@typescript-eslint/no-unused-vars","'Action' is defined but never used.","Identifier","unusedVar","'Dispatch' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'AppStateType' is defined but never used.","'ProfileType' is defined but never used.","'Field' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'Profiler' is defined but never used.","'BrowserRouter' is defined but never used.","'PureComponent' is defined but never used.","'React' is defined but never used.",["247"],["248"],"no-global-assign","no-unsafe-negation"]